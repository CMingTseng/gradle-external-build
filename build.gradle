apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.gradle.plugin-publish'

def publishName = 'external-build'
def homepageUrl = 'https://github.com/awrichar/gradle-external-build'
group = 'com.cisco.gradle'
version = '1.10'

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2'
        }
    }

    dependencies {
        classpath 'com.gradle.publish:plugin-publish-plugin:0.9.7'
    }
}

dependencies {
    compile localGroovy()
    compile gradleApi()
}

ext {
    if (!project.hasProperty('publishUrl')) publishUrl = null
    if (!project.hasProperty('publishUser')) publishUser = null
    if (!project.hasProperty('publishPassword')) publishPassword = null
}

targetCompatibility = '1.6'

publishing {
    repositories {
        maven {
            url = publishUrl
            credentials {
                username publishUser
                password publishPassword
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = publishName
            pom.withXml {
                asNode().appendNode('url', homepageUrl)
            }
        }
    }
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(':publish') && !publishUrl) {
        throw new GradleException('To publish, you must pass in -PpublishUrl (and optionally publishUser/publishPassword).')
    }
}

pluginBundle {
    website = homepageUrl
    vcsUrl = homepageUrl
    description = 'A Gradle plugin for seamlessly integrating with other build tools, including GNU make, CMake, qmake, and more.'
    tags = ['native', 'make', 'automake', 'autoconf', 'cmake', 'qmake']

    plugins {
        externalBuildPlugin {
            id = 'com.cisco.external-build'
            displayName = 'Gradle external build plugin'
        }
    }
}
